@startuml "Diagramme des Classes"

' installer l'extenstion PlantUML 
' pour actualiser le diagramme Alt + D
' pour exporter le diagramme, taper >plantuml et séléctionner "PlantUML: Export Current Diagram"

class Personnage {
  - nom : str
  - stats : Stats
  - inventaire : list[Objets]
  - equipement : Equipement
  - vivant : bool
  + __init__()
  + getPersonnage() 
  + estVivant()
  '+ attaquer, defendre etc                    -> à voir avec LLM
}

class Stats {
  - pvMax : int
  - pvActuel : int
  - atk : int
  - defense : int
  - vitesse : int
  - precision : int
  + __init__()
  + setStats()
  + getStats()
}

class Objet {
  - nom : str
  - statsObj : Stats
  - valeur : int
  - description : str
  - type : TypeObjet
  + __init__()
  '+ utiliser                                  -> à faire avec LLM
}

enum TypeObjet {
  ARME
  ARMURE
  POTION
}

class Equipement {
  - arme : Objet
  - armure : Objet
  + __init__()
  '+ équiper(personnage : Personnage)          -> LLM
  '+ déséquiper(personnage : Personnage)       -> LLM
}

class Inventaire {

  - objets : Objets[]
  + __init__()
  + getInventaire()


}

Personnage --* Stats
Personnage --* Objet
Objet --* Stats
Equipement --* Objet
Objet -- TypeObjet
Inventaire --* Objet


class Piece {
  - description : str
  - personnages : list[Personnage]
  + __init__()
  '+ entrer(personnage : Personnage)                           -> A FAIRE AVEC LLM 
  '+ sortir(personnage : Personnage)                           -> A FAIRE AVEC LLM 
}

class Donjon {
  - pieces : list[Piece]
  + __init__(pieces : list[Piece])
}

Personnage --* Piece
Piece --* Personnage
Donjon --* Piece


class Hero {
  - niveau : int
  - expérience : int
  + __init__()
  + gagnerExpérience(expérience : int)
  + levelUp() 
}

class Ennemy {
  - niveau : int
  + __init__()
  + attaquerJoueur(joueur : Player)
}

class PNJ{
  - dialogue : str
  + __init__()
  + parlerJoueur(joueur : Player)
}

Personnage <|-- Hero
Personnage <|-- Ennemy
Personnage <|-- PNJ

class Game{
  - play()
  - pause()
  - quit()
}



@enduml